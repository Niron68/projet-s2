class Musique extends Son {

    constructor(id, titre){
        super(id + ".ogg", 0);
        this.titre = titre;
        this.notes = [];
        var tempsnote = [11.32,
12.68
,14
,15.35
,16.66
,18.1
,19.35
,20.6
,22.02
,23.37
,24.7
,27.34
,28.65
,30.03
,31.36
,32.67
,33.99
,35.35
,36.67
,38,
39.34,
40.69,
42.03,
43.32,
44.67,
45.98,
47.37,
48.04,
48.68,
49.99,
51.34,
52.68,
53.96,
55.35,
56.66,
58.05,
59.33,
100.72,
102.02,
103.36,
104.65,
106.01,
107.33,
108.67,
109.97,
111.35,
112.68,
114.03,
115.32,
116.64,
117.99,
119.32,
120.70,
122.02,
123.34,
124.68,
126.01,
127.35,
128.67,
130.03,
131.34,
132.65,
134.02,
135.30,
136.66,
138.04,
139.34,
142.02,
143.37,
144.69,
145.99,
147.31,
148.67,
150.05,
151.35,
152.70,
154.02,
155.32,
158.01,
159.36,
200.66,
202.01,
203.32,
206,
208.66,
210.03,
211.31,
212.68,
214.03,
215.37,
216.69,
218.03,
219.36,
220.68,
222.01,
224.67,
226.03,
227.34,
230.01,
231.34,
232.69,
235.38,
236.70,
238.01,
239.32];

    for(var i = 1; i < tempsnote.length; i++)
    {
        this.notes.push(new Note( tempsnote[i], i));
    }

}

    getNoteTime(id){
        return this.notes[id].temps;
    }

    load(){
        super.load();
        this.notes.forEach( (element) => {
            element.load();
        });
        
    }

    getActualTime(){
        return Math.floor(this.sound.currentTime()*100)/100;
    }
}